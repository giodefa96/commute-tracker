name: Test Suite

on:
  push:
    paths: 
      - '**/*.{js,jsx,ts,tsx}'
      - '**/package*.json'
      - 'jest.config.js'
      - 'jest.setup.js'
  pull_request:
    paths:
      - '**/*.{js,jsx,ts,tsx}'
      - '**/package*.json'
      - 'jest.config.js'
      - 'jest.setup.js'

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run unit tests
      run: npm run test -- --coverage --watchAll=false

  component-tests:
    name: Component Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run component tests
      run: npm run test -- --testPathPattern="components/__tests__" --watchAll=false

  utility-tests:
    name: Utility Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run utility tests
      run: npm run test -- --testPathPattern="utils/__tests__" --watchAll=false

  screen-tests:
    name: Screen Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run screen tests
      run: npm run test -- --testPathPattern="app/__tests__" --watchAll=false

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, component-tests, utility-tests, screen-tests]
    if: always()

    steps:
    - name: Summary
      run: |
        echo "## Test Results Summary 📊" >> $GITHUB_STEP_SUMMARY
        echo "| Test Suite | Status |" >> $GITHUB_STEP_SUMMARY
        echo "| --- | --- |" >> $GITHUB_STEP_SUMMARY
        echo "| Unit Tests | ${{ needs.unit-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Component Tests | ${{ needs.component-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Utility Tests | ${{ needs.utility-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Screen Tests | ${{ needs.screen-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY